version: '3.8'

# Docker Compose configuration for Hive MCP Gateway
# Provides both development and production deployment options

services:
  # Main Hive MCP Gateway service
  hive-mcp-gateway:
    build:
      context: .
      dockerfile: Dockerfile
      target: production  # Change to 'development' for dev environment
    container_name: hive-mcp-gateway
    restart: unless-stopped
    ports:
      - "8001:8001"  # Non-interfering port (existing install uses 8000)
    volumes:
      # Configuration persistence
      - ./hive_mcp_gateway_config.json:/app/hive_mcp_gateway_config.json:ro
      - hive-gateway-config:/app/config
      - hive-gateway-logs:/app/logs
      - hive-gateway-data:/app/data
    environment:
      # Application configuration
      - CONFIG_PATH=/app/hive_mcp_gateway_config.json
      - LOG_LEVEL=info
      - HOST=0.0.0.0
      - PORT=8001
      
      # API Keys (use .env file or set directly)
      - EXA_API_KEY=${EXA_API_KEY:-}
      
      # Python configuration
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
    networks:
      - hive-gateway-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    depends_on:
      - redis  # Optional: for caching and session management
    labels:
      - "com.hive.gateway.service=main"
      - "com.hive.gateway.version=0.3.0"

  # Redis for caching and session management (optional)
  redis:
    image: redis:7-alpine
    container_name: hive-gateway-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - hive-gateway-network
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Development service (alternative to main service)
  hive-gateway-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: hive-mcp-gateway-dev
    restart: "no"  # Don't auto-restart in development
    ports:
      - "8001:8001"
      - "5678:5678"  # Debug port
    volumes:
      # Mount source code for live development
      - .:/app
      - hive-gateway-dev-logs:/app/logs
    environment:
      - CONFIG_PATH=/app/hive_mcp_gateway_config.json
      - LOG_LEVEL=debug
      - HOST=0.0.0.0
      - PORT=8001
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
      - EXA_API_KEY=${EXA_API_KEY:-}
    networks:
      - hive-gateway-network
    profiles:
      - development  # Only start with: docker-compose --profile development up
    command: ["uvicorn", "hive_mcp_gateway.main:app", "--host", "0.0.0.0", "--port", "8001", "--reload"]

  # GUI service (for systems with display)
  hive-gateway-gui:
    build:
      context: .
      dockerfile: Dockerfile
      target: gui
    container_name: hive-mcp-gateway-gui
    restart: "no"
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      - .:/app
      - hive-gateway-gui-logs:/app/logs
    environment:
      - DISPLAY=${DISPLAY:-:0}
      - CONFIG_PATH=/app/hive_mcp_gateway_config.json
      - PYTHONPATH=/app
    networks:
      - hive-gateway-network
    profiles:
      - gui  # Only start with: docker-compose --profile gui up
    depends_on:
      - hive-mcp-gateway

  # Monitoring service (optional)
  hive-gateway-monitor:
    image: prom/prometheus:latest
    container_name: hive-gateway-monitor
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    networks:
      - hive-gateway-network
    profiles:
      - monitoring
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'

# Network configuration
networks:
  hive-gateway-network:
    driver: bridge
    name: hive-gateway-network

# Volume definitions
volumes:
  # Production volumes
  hive-gateway-config:
    driver: local
    name: hive-gateway-config
  
  hive-gateway-logs:
    driver: local
    name: hive-gateway-logs
  
  hive-gateway-data:
    driver: local
    name: hive-gateway-data
  
  # Development volumes
  hive-gateway-dev-logs:
    driver: local
    name: hive-gateway-dev-logs
  
  hive-gateway-gui-logs:
    driver: local
    name: hive-gateway-gui-logs
  
  # Redis data
  redis-data:
    driver: local
    name: hive-gateway-redis-data
  
  # Monitoring data
  prometheus-data:
    driver: local
    name: hive-gateway-prometheus-data

# Example .env file contents (create .env in project root):
# EXA_API_KEY=your_exa_api_key_here
# LOG_LEVEL=info
# DISPLAY=:0